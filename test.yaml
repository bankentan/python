func handlePodMutate(request *v1beta1.AdmissionRequest) (*v1beta1.AdmissionResponse, error) {
  pod := &corev1.Pod{}
  if err := json.Unmarshal(request.Object.Raw, pod); err != nil {
    return nil, err
  }

  // Check if the pod has the "app=example" label.
  if pod.Labels["app"] != "example" {
    return &v1beta1.AdmissionResponse{
      Allowed: true,
    }, nil
  }

  // Add a sidecar container to the pod.
  pod.Spec.Containers = append(pod.Spec.Containers, corev1.Container{
    Name:  "example-sidecar",
    Image: "example.com/sidecar:latest",
  })

  patchBytes, err := json.Marshal(pod)
  if err != nil {
    return nil, err
  }

  return &v1beta1.AdmissionResponse{
    Allowed:   true,
    Patch:     patchBytes,
    PatchType: &patchType,
  }, nil
}
