func handlePodMutate(request *v1beta1.AdmissionRequest) (*v1beta1.AdmissionResponse, error) {
  pod := &corev1.Pod{}
  if err := json.Unmarshal(request.Object.Raw, pod); err != nil {
    return nil, err
  }

  // Check if the pod has the "app=ken" label.
  if pod.Labels["app"] != "ken" {
    return &v1beta1.AdmissionResponse{
      Allowed: true,
    }, nil
  }

  // Add HTTPS_PROXY environment variable to the pod.
  pod.Spec.Containers[0].Env = append(pod.Spec.Containers[0].Env, corev1.EnvVar{
    Name:  "HTTPS_PROXY",
    Value: "https://proxy.example.com",
  })

  patchBytes, err := json.Marshal(pod)
  if err != nil {
    return nil, err
  }

  return &v1beta1.AdmissionResponse{
    Allowed:   true,
    Patch:     patchBytes,
    PatchType: &patchType,
  }, nil
}
